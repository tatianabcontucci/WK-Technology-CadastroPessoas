//
// Created by the DataSnap proxy generator.
// 06/12/2022 09:34:53
//

unit ClientClassesUnit1;

interface

uses System.JSON, Datasnap.DSProxyRest, Datasnap.DSClientRest, Data.DBXCommon, Data.DBXClient, Data.DBXDataSnap, Data.DBXJSON, Datasnap.DSProxy, System.Classes, System.SysUtils, Data.DB, Data.SqlExpr, Data.DBXDBReaders, Data.DBXCDSReaders, Datasnap.DBClient, Data.DBXJSONReflect;

type

  IDSRestCachedTClientDataSet = interface;

  TServerMethods1Client = class(TDSAdminRestClient)
  private
    FEchoStringCommand: TDSRestCommand;
    FReverseStringCommand: TDSRestCommand;
    FSetPessoaCommand: TDSRestCommand;
    FModifyPessoaCommand: TDSRestCommand;
    FDeletePessoaCommand: TDSRestCommand;
    FGetPessoaCommand: TDSRestCommand;
    FGetPessoaCommand_Cache: TDSRestCommand;
    FGetProximoCodigoPessoaCommand: TDSRestCommand;
  public
    constructor Create(ARestConnection: TDSRestConnection); overload;
    constructor Create(ARestConnection: TDSRestConnection; AInstanceOwner: Boolean); overload;
    destructor Destroy; override;
    function EchoString(Value: string; const ARequestFilter: string = ''): string;
    function ReverseString(Value: string; const ARequestFilter: string = ''): string;
    procedure SetPessoa(pIdPessoa: string; pNatureza: string; pDocumentio: string; pPrimeiroNome: string; pSegundoNome: string);
    procedure ModifyPessoa(pIdPessoa: string; pNatureza: string; pDocumentio: string; pPrimeiroNome: string; pSegundoNome: string);
    procedure DeletePessoa(pIdPessoa: Integer);
    function GetPessoa(pIdPessoa: Integer; const ARequestFilter: string = ''): TClientDataSet;
    function GetPessoa_Cache(pIdPessoa: Integer; const ARequestFilter: string = ''): IDSRestCachedTClientDataSet;
    function GetProximoCodigoPessoa(pSQL: string; const ARequestFilter: string = ''): Integer;
  end;

  IDSRestCachedTClientDataSet = interface(IDSRestCachedObject<TClientDataSet>)
  end;

  TDSRestCachedTClientDataSet = class(TDSRestCachedObject<TClientDataSet>, IDSRestCachedTClientDataSet, IDSRestCachedCommand)
  end;

const
  TServerMethods1_EchoString: array [0..1] of TDSRestParameterMetaData =
  (
    (Name: 'Value'; Direction: 1; DBXType: 26; TypeName: 'string'),
    (Name: ''; Direction: 4; DBXType: 26; TypeName: 'string')
  );

  TServerMethods1_ReverseString: array [0..1] of TDSRestParameterMetaData =
  (
    (Name: 'Value'; Direction: 1; DBXType: 26; TypeName: 'string'),
    (Name: ''; Direction: 4; DBXType: 26; TypeName: 'string')
  );

  TServerMethods1_SetPessoa: array [0..4] of TDSRestParameterMetaData =
  (
    (Name: 'pIdPessoa'; Direction: 1; DBXType: 26; TypeName: 'string'),
    (Name: 'pNatureza'; Direction: 1; DBXType: 26; TypeName: 'string'),
    (Name: 'pDocumentio'; Direction: 1; DBXType: 26; TypeName: 'string'),
    (Name: 'pPrimeiroNome'; Direction: 1; DBXType: 26; TypeName: 'string'),
    (Name: 'pSegundoNome'; Direction: 1; DBXType: 26; TypeName: 'string')
  );

  TServerMethods1_ModifyPessoa: array [0..4] of TDSRestParameterMetaData =
  (
    (Name: 'pIdPessoa'; Direction: 1; DBXType: 26; TypeName: 'string'),
    (Name: 'pNatureza'; Direction: 1; DBXType: 26; TypeName: 'string'),
    (Name: 'pDocumentio'; Direction: 1; DBXType: 26; TypeName: 'string'),
    (Name: 'pPrimeiroNome'; Direction: 1; DBXType: 26; TypeName: 'string'),
    (Name: 'pSegundoNome'; Direction: 1; DBXType: 26; TypeName: 'string')
  );

  TServerMethods1_DeletePessoa: array [0..0] of TDSRestParameterMetaData =
  (
    (Name: 'pIdPessoa'; Direction: 1; DBXType: 6; TypeName: 'Integer')
  );

  TServerMethods1_GetPessoa: array [0..1] of TDSRestParameterMetaData =
  (
    (Name: 'pIdPessoa'; Direction: 1; DBXType: 6; TypeName: 'Integer'),
    (Name: ''; Direction: 4; DBXType: 37; TypeName: 'TClientDataSet')
  );

  TServerMethods1_GetPessoa_Cache: array [0..1] of TDSRestParameterMetaData =
  (
    (Name: 'pIdPessoa'; Direction: 1; DBXType: 6; TypeName: 'Integer'),
    (Name: ''; Direction: 4; DBXType: 26; TypeName: 'String')
  );

  TServerMethods1_GetProximoCodigoPessoa: array [0..1] of TDSRestParameterMetaData =
  (
    (Name: 'pSQL'; Direction: 1; DBXType: 26; TypeName: 'string'),
    (Name: ''; Direction: 4; DBXType: 6; TypeName: 'Integer')
  );

implementation

function TServerMethods1Client.EchoString(Value: string; const ARequestFilter: string): string;
begin
  if FEchoStringCommand = nil then
  begin
    FEchoStringCommand := FConnection.CreateCommand;
    FEchoStringCommand.RequestType := 'GET';
    FEchoStringCommand.Text := 'TServerMethods1.EchoString';
    FEchoStringCommand.Prepare(TServerMethods1_EchoString);
  end;
  FEchoStringCommand.Parameters[0].Value.SetWideString(Value);
  FEchoStringCommand.Execute(ARequestFilter);
  Result := FEchoStringCommand.Parameters[1].Value.GetWideString;
end;

function TServerMethods1Client.ReverseString(Value: string; const ARequestFilter: string): string;
begin
  if FReverseStringCommand = nil then
  begin
    FReverseStringCommand := FConnection.CreateCommand;
    FReverseStringCommand.RequestType := 'GET';
    FReverseStringCommand.Text := 'TServerMethods1.ReverseString';
    FReverseStringCommand.Prepare(TServerMethods1_ReverseString);
  end;
  FReverseStringCommand.Parameters[0].Value.SetWideString(Value);
  FReverseStringCommand.Execute(ARequestFilter);
  Result := FReverseStringCommand.Parameters[1].Value.GetWideString;
end;

procedure TServerMethods1Client.SetPessoa(pIdPessoa: string; pNatureza: string; pDocumentio: string; pPrimeiroNome: string; pSegundoNome: string);
begin
  if FSetPessoaCommand = nil then
  begin
    FSetPessoaCommand := FConnection.CreateCommand;
    FSetPessoaCommand.RequestType := 'GET';
    FSetPessoaCommand.Text := 'TServerMethods1.SetPessoa';
    FSetPessoaCommand.Prepare(TServerMethods1_SetPessoa);
  end;
  FSetPessoaCommand.Parameters[0].Value.SetWideString(pIdPessoa);
  FSetPessoaCommand.Parameters[1].Value.SetWideString(pNatureza);
  FSetPessoaCommand.Parameters[2].Value.SetWideString(pDocumentio);
  FSetPessoaCommand.Parameters[3].Value.SetWideString(pPrimeiroNome);
  FSetPessoaCommand.Parameters[4].Value.SetWideString(pSegundoNome);
  FSetPessoaCommand.Execute;
end;

procedure TServerMethods1Client.ModifyPessoa(pIdPessoa: string; pNatureza: string; pDocumentio: string; pPrimeiroNome: string; pSegundoNome: string);
begin
  if FModifyPessoaCommand = nil then
  begin
    FModifyPessoaCommand := FConnection.CreateCommand;
    FModifyPessoaCommand.RequestType := 'GET';
    FModifyPessoaCommand.Text := 'TServerMethods1.ModifyPessoa';
    FModifyPessoaCommand.Prepare(TServerMethods1_ModifyPessoa);
  end;
  FModifyPessoaCommand.Parameters[0].Value.SetWideString(pIdPessoa);
  FModifyPessoaCommand.Parameters[1].Value.SetWideString(pNatureza);
  FModifyPessoaCommand.Parameters[2].Value.SetWideString(pDocumentio);
  FModifyPessoaCommand.Parameters[3].Value.SetWideString(pPrimeiroNome);
  FModifyPessoaCommand.Parameters[4].Value.SetWideString(pSegundoNome);
  FModifyPessoaCommand.Execute;
end;

procedure TServerMethods1Client.DeletePessoa(pIdPessoa: Integer);
begin
  if FDeletePessoaCommand = nil then
  begin
    FDeletePessoaCommand := FConnection.CreateCommand;
    FDeletePessoaCommand.RequestType := 'GET';
    FDeletePessoaCommand.Text := 'TServerMethods1.DeletePessoa';
    FDeletePessoaCommand.Prepare(TServerMethods1_DeletePessoa);
  end;
  FDeletePessoaCommand.Parameters[0].Value.SetInt32(pIdPessoa);
  FDeletePessoaCommand.Execute;
end;

function TServerMethods1Client.GetPessoa(pIdPessoa: Integer; const ARequestFilter: string): TClientDataSet;
begin
  if FGetPessoaCommand = nil then
  begin
    FGetPessoaCommand := FConnection.CreateCommand;
    FGetPessoaCommand.RequestType := 'GET';
    FGetPessoaCommand.Text := 'TServerMethods1.GetPessoa';
    FGetPessoaCommand.Prepare(TServerMethods1_GetPessoa);
  end;
  FGetPessoaCommand.Parameters[0].Value.SetInt32(pIdPessoa);
  FGetPessoaCommand.Execute(ARequestFilter);
  if not FGetPessoaCommand.Parameters[1].Value.IsNull then
  begin
    FUnMarshal := TDSRestCommand(FGetPessoaCommand.Parameters[1].ConnectionHandler).GetJSONUnMarshaler;
    try
      Result := TClientDataSet(FUnMarshal.UnMarshal(FGetPessoaCommand.Parameters[1].Value.GetJSONValue(True)));
      if FInstanceOwner then
        FGetPessoaCommand.FreeOnExecute(Result);
    finally
      FreeAndNil(FUnMarshal)
    end
  end
  else
    Result := nil;
end;

function TServerMethods1Client.GetPessoa_Cache(pIdPessoa: Integer; const ARequestFilter: string): IDSRestCachedTClientDataSet;
begin
  if FGetPessoaCommand_Cache = nil then
  begin
    FGetPessoaCommand_Cache := FConnection.CreateCommand;
    FGetPessoaCommand_Cache.RequestType := 'GET';
    FGetPessoaCommand_Cache.Text := 'TServerMethods1.GetPessoa';
    FGetPessoaCommand_Cache.Prepare(TServerMethods1_GetPessoa_Cache);
  end;
  FGetPessoaCommand_Cache.Parameters[0].Value.SetInt32(pIdPessoa);
  FGetPessoaCommand_Cache.ExecuteCache(ARequestFilter);
  Result := TDSRestCachedTClientDataSet.Create(FGetPessoaCommand_Cache.Parameters[1].Value.GetString);
end;

function TServerMethods1Client.GetProximoCodigoPessoa(pSQL: string; const ARequestFilter: string): Integer;
begin
  if FGetProximoCodigoPessoaCommand = nil then
  begin
    FGetProximoCodigoPessoaCommand := FConnection.CreateCommand;
    FGetProximoCodigoPessoaCommand.RequestType := 'GET';
    FGetProximoCodigoPessoaCommand.Text := 'TServerMethods1.GetProximoCodigoPessoa';
    FGetProximoCodigoPessoaCommand.Prepare(TServerMethods1_GetProximoCodigoPessoa);
  end;
  FGetProximoCodigoPessoaCommand.Parameters[0].Value.SetWideString(pSQL);
  FGetProximoCodigoPessoaCommand.Execute(ARequestFilter);
  Result := FGetProximoCodigoPessoaCommand.Parameters[1].Value.GetInt32;
end;

constructor TServerMethods1Client.Create(ARestConnection: TDSRestConnection);
begin
  inherited Create(ARestConnection);
end;

constructor TServerMethods1Client.Create(ARestConnection: TDSRestConnection; AInstanceOwner: Boolean);
begin
  inherited Create(ARestConnection, AInstanceOwner);
end;

destructor TServerMethods1Client.Destroy;
begin
  FEchoStringCommand.DisposeOf;
  FReverseStringCommand.DisposeOf;
  FSetPessoaCommand.DisposeOf;
  FModifyPessoaCommand.DisposeOf;
  FDeletePessoaCommand.DisposeOf;
  FGetPessoaCommand.DisposeOf;
  FGetPessoaCommand_Cache.DisposeOf;
  FGetProximoCodigoPessoaCommand.DisposeOf;
  inherited;
end;

end.

